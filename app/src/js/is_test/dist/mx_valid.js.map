{"version":3,"file":"mx_valid.js","sources":["../index.js"],"sourcesContent":["/**\n * Test if entry is empty : empty array, empty string, etc.\n * @param {Any} item item to test\n */\nexport function isEmpty(item) {\n  if (!item) {\n    return true;\n  } else if (isObject(item)) {\n    return isEqual(item, {});\n  } else if (isArray(item)) {\n    return isEqual(item, []);\n  }\n}\nexport function isNotEmpty(item) {\n  return !isEmpty(item);\n}\n\n/**\n * Test if entry is an object\n * @param {Object} item\n */\nexport function isObject(item) {\n  return !!item && typeof item === 'object' && !Array.isArray(item);\n}\n\n/**\n * Test if it's a MapX view.\n * @param {Object} item to test\n */\nexport function isView(item) {\n  return (\n    isObject(item) &&\n    isString(item.type) &&\n    !!item.type.match(/^(vt|rt|cc||sm||gj)$/)\n  );\n}\n\n/**\n * Test if it's a view of given type\n * @param {Object} item to test\n * @param {String|Array} type or array of types\n * @param {Function} validator Additionnal validator that must return boolean\n */\nexport function isViewType(item, type, validator) {\n  type = isArray(type) ? type : [type];\n  const valid = isFunction(validator) ? validator(item) : true;\n  const typeOk = type.reduce((a, t) => {\n    return a ? a : item.type === t;\n  }, false);\n  return isView(item) && typeOk && valid;\n}\n\n/**\n * Test if it's a MapX view of type vt\n * @param {Object} item to test\n */\nexport function isViewVt(item) {\n  return isViewType(item, 'vt');\n}\n\n/**\n * Test if it's a MapX view of type rt\n * @param {Object} item to test\n */\nexport function isViewRt(item) {\n  return isViewType(item, 'rt');\n}\n\n/**\n * Test if it's a MapX view is editable\n * @param {Object} item to test\n */\nexport function isViewEditable(item) {\n  return isView(item) && item._edit === true;\n}\n\n/**\n * Test if is array of views object\n * @param {Array} arr Array to test\n */\nexport function isArrayOfViews(arr) {\n  return (\n    isArray(arr) &&\n    arr.reduce((a, i) => {\n      return !a ? a : isView(i);\n    }, true)\n  );\n}\n\n/**\n * Test if array of views id\n * @param {Array} arr Array of views id\n * @return {Boolean}\n */\nexport function isArrayOfViewsId(arr) {\n  return (\n    isArray(arr) &&\n    arr.reduce((a, i) => {\n      return a === false ? a : isViewId(i);\n    }, true)\n  );\n}\n\n/**\n * Check if array is sorted\n * @param {Array} arr Array to test\n * @param {Boolean} desc Descendent ?\n */\nexport function isSorted(arr, desc) {\n  return (\n    isArray(arr) &&\n    arr.every((val, i, arr) =>\n      !i || desc ? val < arr[i + 1] : val >= arr[i - 1]\n    )\n  );\n}\n\n/**\n * Test for valid project id\n * @param {String} id Project id to test\n * @return {Boolean}\n */\nexport function isProjectId(idProject) {\n  const reg = new RegExp('MX-.{3}-.{3}-.{3}-.{3}-.{3}');\n  return !!idProject && !!idProject.match(reg);\n}\n\n/**\n * Test if it's a MapX view of type vt\n * @param {Object} item to test\n */\nexport function isSourceId(id) {\n  const reg = new RegExp(\n    'mx_(vector|[a-z]{3})(_vector)?_([0-9a-z]{5,6})_([0-9a-z]{5,6})_[0-9a-z]{5,6}_[0-9a-z]{5,6}(_u_[0-9]+)?'\n  );\n  return !!id.match(id);\n}\n/**\n * Test if it's an array of MapX source id\n * @param {Array} arr Array of item to test\n */\nexport function isArrayOfSourceId(arr) {\n  return isArray(arr) && arr.every(isSourceId);\n}\n\n/**\n * Test for valid view id\n * @param {String} id View id to test\n * @return {Boolean}\n */\nexport function isViewId(idView) {\n  const expIdView = new RegExp('^MX-GJ-.{10}$|^MX-.{5}-.{5}-.{5}$');\n  return !!idView && isString(idView) && !!idView.match(expIdView);\n}\n/**\n * Test for valid project\n * @param {Object} p Project object\n * @return {Boolean}\n */\nexport function isProject(p) {\n  return isObject(p) && isProjectId(p.id);\n}\n/**\n * Test for valid project array\n * @param {Array} arr Array of projects\n * @return {Boolean}\n */\nexport function isProjectsArray(arr) {\n  return (\n    isArray(arr) &&\n    arr.reduce((a, p) => {\n      return a === false ? a : isProject(p);\n    }, true)\n  );\n}\n/**\n * Test for promise\n * @param {Promise} item item to test\n */\nexport function isPromise(item) {\n  return item instanceof Promise;\n}\n\n/**\n * Test for canvas\n * @param {Element} item item to test\n */\nexport function isCanvas(item) {\n  return item instanceof HTMLCanvasElement;\n}\n\n/**\n * Test for fontawesome icon class\n * @param {Element} item item to test\n */\nexport function isIconFont(item) {\n  return isElement(item) && item.classList.contains('fa');\n}\n\n/**\n * Test if entry is an aray\n * @param {Array} item array\n */\nexport function isArray(item) {\n  return !!item && typeof item === 'object' && Array.isArray(item);\n}\nexport function isArrayOfString(arr) {\n  return (\n    isArray(arr) &&\n    arr.reduce((a, p) => {\n      return a === false ? a : isString(p);\n    }, true)\n  );\n}\n\n/**\n * Test if entry is an table (array of object)\n * @param {Array} item array\n */\nexport function isTable(item) {\n  return (\n    isArray(item) &&\n    (function() {\n      return item.reduce((a, i) => (!a ? a : isObject(i)), true);\n    })()\n  );\n}\n\nexport function isArrayOfObject(item) {\n  return isTable(item);\n}\n/**\n * Test if entry is JSON\n * @param {String} String to test\n */\nexport function isJson(str) {\n  try {\n    JSON.parse(str);\n  } catch (e) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * Test if stringifiable\n * @param {Any} item\n * @return {Boolean}\n */\nexport function isStringifiable(item) {\n  return (\n    !isUndefined(item) &&\n    (isObject(item) ||\n      isArray(item) ||\n      isString(item) ||\n      isNumeric(item) ||\n      isBoolean(item))\n  );\n}\n\n/**\n * Test if entry is undefined\n * @param {Any} item\n * @return {Boolean}\n */\nexport function isUndefined(item) {\n  return typeof item === 'undefined';\n}\n\n/**\n * Test if entry is numeric\n * @param {String|Number} n string or number to test\n */\nexport function isNumeric(n) {\n  return !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n/**\n * Test if entry is boolean\n * @param {Boolean} b boolean to test\n */\nexport function isBoolean(b) {\n  return b === true || b === false;\n}\n\n/**\n * Test if is map\n * @param {Object} map Map object\n */\nexport function isMap(map) {\n  return isObject(map) && map._canvas instanceof HTMLCanvasElement;\n}\n/**\n * Test if entry is string and have the correct number of characters\n * @param {String} str, character to test\n * @param {Number} min Minumum number of characters. Default 0.\n * @param {Number} max Maximum number of characters. Default Infinity.\n */\nexport function isStringRange(str, min, max) {\n  min = min || 0;\n  max = max || Infinity;\n  var isValid = !!str && typeof str === 'string';\n  if (!isValid) {\n    return false;\n  }\n  str = str.trim();\n  return str.length >= min && str.length <= max;\n}\n\n/**\n * Test if valide base64\n */\nlet regexDataImg = new RegExp(\n  /^data:image\\/(png|jpeg|svg);base64\\,[a-zA-Z0-9\\+\\/\\=]+$/\n);\nexport function isBase64img(str) {\n  try {\n    let isValid = isStringRange(str, 22) && regexDataImg.test(str);\n    if (!isValid) {\n      return false;\n    }\n    let strb64 = str.split(',')[1];\n    return isStringRange(strb64, 10);\n  } catch (err) {\n    return false;\n  }\n}\n\n/**\n * Quick type checker by group eg. image\n * @param {String} type Type to test\n * @param {String} group Group : image, ... NOTE: to be completed\n */\nexport function isValidType(type, group) {\n  const types = {\n    image: [\n      'image/apng',\n      'image/bmp',\n      'image/gif',\n      'image/jpeg',\n      'image/png',\n      'image/svg+xml',\n      'image/tiff',\n      'image/webp'\n    ]\n  };\n  return types[group].indexOf(type) > -1;\n}\n\n/**\n * Test if string contain HTML\n * @param {String} n string to test\n * @note https://stackoverflow.com/questions/15458876/check-if-a-string-is-html-or-not#answer-36773193\n */\nexport function isHTML(str) {\n  return isString(str) && /(<([^>]+)>)/i.test(str);\n}\n\n/**\n * Test if entry is an email\n * @param {String} email\n */\nexport function isEmail(email) {\n  return (\n    isString(email) &&\n    /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(\n      email\n    )\n  );\n}\n\n/**\n * Test if entry is string\n * @param {String} str string to test\n */\nexport function isString(str) {\n  return typeof str === 'string';\n}\n/**\n * Test if entry is function\n * @param {Function} fun Function to test\n */\nexport function isFunction(fun) {\n  return fun instanceof Function;\n}\n\n/**\n * Check if an object is a html element\n * @param {Object} obj object to test\n */\nexport function isElement(obj) {\n  return obj instanceof Element;\n}\n\n/**\n * Test for object equality\n *\n * @note asnwer by Ebrahim Byagowi at https://stackoverflow.com/questions/201183/how-to-determine-equality-for-two-javascript-objects\n *\n * @param {Object} x First object to compare\n * @param {Object} y Second object to compare\n * @return {Boolean} Are those object equal ?\n */\nexport function isEqual(x, y) {\n  'use strict';\n  /**\n   *\n   *\n   */\n  if (x === null || x === undefined || y === null || y === undefined) {\n    return x === y;\n  }\n  // after this just checking type of one would be enough\n  if (x.constructor !== y.constructor) {\n    return false;\n  }\n  // if they are functions, they should exactly refer to same one (because of closures)\n  if (x instanceof Function) {\n    return x === y;\n  }\n  // if they are regexps, they should exactly refer to same one (it is hard to better equality check on current ES)\n  if (x instanceof RegExp) {\n    return x === y;\n  }\n  if (x === y || x.valueOf() === y.valueOf()) {\n    return true;\n  }\n  if (Array.isArray(x) && x.length !== y.length) {\n    return false;\n  }\n\n  // if they are dates, they must had equal valueOf\n  if (x instanceof Date) {\n    return false;\n  }\n\n  // if they are strictly equal, they both need to be object at least\n  if (!(x instanceof Object)) {\n    return false;\n  }\n  if (!(y instanceof Object)) {\n    return false;\n  }\n\n  // recursive object equality check\n  var p = Object.keys(x);\n  return (\n    Object.keys(y).every(function(i) {\n      return p.indexOf(i) !== -1;\n    }) &&\n    p.every(function(i) {\n      return isEqual(x[i], y[i]);\n    })\n  );\n}\n\n/**\n * Validate url\n * @param {String} url to test\n * @note https://stackoverflow.com/questions/8667070/javascript-regular-expression-to-validate-url\n * @note https://mathiasbynens.be/demo/url-regex\n */\nexport function isUrl(url) {\n  return (\n    isString(url) &&\n    /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(\n      url\n    )\n  );\n}\n\n/**\n * Validate date\n * @param {String|Number} date to validate\n */\nexport function isDateString(date) {\n  return (\n    isString(date) &&\n    (/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/.test(date) ||\n      /(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+)|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d)|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d)/.test(\n        date\n      ))\n  );\n}\n"],"names":["isEmpty","item","isObject","isEqual","isArray","Array","isView","isString","type","match","isViewType","validator","valid","isFunction","typeOk","reduce","a","t","isProjectId","idProject","reg","RegExp","isSourceId","id","isViewId","idView","expIdView","isProject","p","isTable","i","isUndefined","isNumeric","n","isNaN","parseFloat","isFinite","isBoolean","b","isStringRange","str","min","max","Infinity","trim","length","regexDataImg","fun","Function","isElement","obj","Element","x","y","constructor","valueOf","Date","Object","keys","every","indexOf","arr","test","split","err","HTMLCanvasElement","date","email","classList","contains","JSON","parse","e","map","_canvas","Promise","desc","val","url","group","image","_edit"],"mappings":"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"}